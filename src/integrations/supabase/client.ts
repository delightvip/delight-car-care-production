
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://gmtzeqwyybgcjmkqhshr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdtdHplcXd5eWJnY2pta3Foc2hyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2NzkzOTksImV4cCI6MjA1ODI1NTM5OX0.USzf9MqbkRC9TAkuIbTjnjEZlRtRQMfDt4EPbi3aYXA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create a modified supabase client for low stock queries
export const createLowStockFilter = (columnName: string) => {
  return `${columnName}.lt.min_stock`;
};

// Define custom RPC function types to workaround type issues
export const rpcFunctions = {
  async getProductionStats() {
    return await supabase.functions.invoke('get_production_stats') as unknown as { 
      data: { 
        total_production_orders: number;
        completed_orders: number;
        pending_orders: number;
        total_cost: number;
      } | null;
      error: any;
    };
  },
  async getMonthlyProductionStats() {
    return await supabase.functions.invoke('get_monthly_production_stats') as unknown as {
      data: { 
        month: string;
        production_count: number;
        packaging_count: number;
      }[] | null;
      error: any;
    };
  },
  // Helper function to replace coalesce_numeric RPC calls
  coalesceNumeric(column: string) {
    // This is a client-side helper method for querying columns when comparing to other columns
    // Used to replace the coalesce_numeric RPC calls
    return column;
  }
};
